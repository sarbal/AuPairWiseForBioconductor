install.packages("tictoc")
library(AuPairWise)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/Users/Sascha/Documents/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
library(AuPairWise)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
summary = run_APW(exprs, out, stoich.pairs, n.repeats=3)
library(AuPairWise)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
summary = run_APW(exprs, out, stoich.pairs, n.repeats=3)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
library(AuPairWise)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
summary = run_APW(exprs, out, stoich.pairs, n.repeats=3)
library(AuPairWise)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
summary = run_APW(exprs, out, stoich.pairs, n.repeats=3)
library(AuPairWise)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
summary = run_APW(exprs, out, stoich.pairs, n.repeats=3)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
summary = run_APW(exprs, out, stoich.pairs, n.repeats=3)
library(AuPairWise)
# Please enter your working directory
# masterdir = "/Users/amyxu/Documents/Uni/2021/BINF6111/AuPairWiseForBioconductor"
masterdir = "~/GitHub/AuPairWiseForBioconductor"
# Loading expression data
load(paste(masterdir,"/SampleData/sample_brainspan.Rdata",sep=""))
# Loading stoic pair data
load(paste(masterdir,"/SampleData/pairs.Rdata",sep=""))
# Setting output directory
out = paste(masterdir,"/Output/results",sep="")
summary = run_APW(exprs, out, stoich.pairs, n.repeats=2)
print(exprs)
View(exprs)
install.packages("testthat")
data <- data.frame(x1 = 3:6,                        # Create data frame
x2 = 1:4,
x3 = letters[5:8],
x4 = "x")
View(data)
data <- data.frame(x1 = 3, 4, 5, 6,                        # Create data frame
x2 = 1, 2, 3, 4,
x3 = 0, 0, 16, 128,
x4 = -Inf, Inf, 0, 0)
x1 <- c(3, 4, 5, 6)
x2 <- c(1, 2, 3, 4)
x3 <- c(0, 0, 16, 128)
x4 <- c(-Inf, Inf, 0, 0)
data <- data.frame(x1, x2, x3, x4)
View(data)
model.fx_data = model.fx(data, log2)
test_model.fx <- function() {
library(AuPairWise)
x1 <- c(3, 4, 5, 6)
x2 <- c(1, 2, 3, 4)
x3 <- c(0, 0, 16, 128)
x4 <- c(-Inf, Inf, 0, 0)
data <- data.frame(x1, x2, x3, x4)
model.fx_data = model.fx(data, log2)
RUnit::checkEquals(2, 2)
}
library(AuPairWise)
x1 <- c(3, 4, 5, 6)
x2 <- c(1, 2, 3, 4)
x3 <- c(0, 0, 16, 128)
x4 <- c(-Inf, Inf, 0, 0)
data <- data.frame(x1, x2, x3, x4)
model.fx_data = model.fx(data, log2)
library(AuPairWise)
x1 <- c(3, 4, 5, 6)
x2 <- c(1, 2, 3, 4)
x3 <- c(0, 0, 16, 128)
x4 <- c(-Inf, Inf, 0, 0)
data <- data.frame(x1, x2, x3, x4)
model.fx_data <- model.fx(data, log2)
library(AuPairWise)
x1 <- c(3, 4, 5, 6)
x2 <- c(1, 2, 3, 4)
x3 <- c(0, 0, 16, 128)
x4 <- c(-Inf, Inf, 0, 0)
library(AuPairWise)
data <- data.frame(x1, x2, x3, x4)
model.fx_data <- model.fx(data, log2)
RUnit::checkEquals(2, 2)
library(AuPairWise)
x1 <- c(3, 4, 5, 6)
x2 <- c(1, 2, 3, 4)
x3 <- c(0, 0, 16, 128)
x4 <- c(-Inf, Inf, 0, 0)
data <- data.frame(x1, x2, x3, x4)
model.fx_data <- model.fx(data, log2)
context("model.fx")
testthat::context("model.fx")
x1 <- c(3, 4, 5, 6)
x2 <- c(1, 2, 3, 4)
x3 <- c(0, 0, 16, 128)
x4 <- c(-Inf, Inf, 0, 0)
data <- data.frame(x1, x2, x3, x4)
model.fx_data <- model.fx(data, log2)
library(AuPairWise)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
install.packages("ALL")
devtools::test()
sample.expressionSet
sample.ExpressionSet
data(sample.ExpressionSet)
